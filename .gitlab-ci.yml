# GitLab CI/CD configuration for building and pushing Docker image

stages:
  - build
  - push
  - deploy

variables:
  DOCKER_IMAGE: herpiko/tg-cc
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

# Docker build job
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker build -t $DOCKER_IMAGE:latest .
    - docker images
  only:
    - main
    - tags
  tags:
    - docker

# Push to Docker Hub
push:latest:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_IMAGE:latest .
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKER_IMAGE:latest
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
    - echo "Image pushed successfully!"
  after_script:
    - docker logout
  only:
    - main
  tags:
    - docker

# Push tagged version
push:tag:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_TAG .
    - docker build -t $DOCKER_IMAGE:latest .
    - docker push $DOCKER_IMAGE:$CI_COMMIT_TAG
    - docker push $DOCKER_IMAGE:latest
    - echo "Tagged image $CI_COMMIT_TAG pushed successfully!"
  after_script:
    - docker logout
  only:
    - tags
  tags:
    - docker

# Example deploy job (uncomment and configure as needed)
# deploy:production:
#   stage: deploy
#   image: alpine:latest
#   before_script:
#     - apk add --no-cache openssh-client
#     - eval $(ssh-agent -s)
#     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
#   script:
#     - ssh $DEPLOY_USER@$DEPLOY_HOST "cd /path/to/tg-cc && docker-compose pull && docker-compose up -d"
#   only:
#     - main
#   when: manual
#   environment:
#     name: production
#     url: https://your-production-url.com
